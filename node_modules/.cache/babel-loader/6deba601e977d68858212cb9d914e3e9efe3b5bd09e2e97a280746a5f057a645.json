{"ast":null,"code":"// Local Database Service - Can be easily connected to Firebase\nclass DatabaseService {\n  constructor() {\n    this.storageKey = 'vibe_coding_lifestyle_db';\n    this.initializeLocalStorage();\n  }\n\n  // Initialize local storage with default data\n  initializeLocalStorage() {\n    if (!localStorage.getItem(this.storageKey)) {\n      const defaultData = {\n        users: [],\n        contacts: [],\n        subscriptions: [],\n        analytics: {\n          pageViews: 0,\n          formSubmissions: 0,\n          buttonClicks: 0\n        }\n      };\n      localStorage.setItem(this.storageKey, JSON.stringify(defaultData));\n    }\n  }\n\n  // Get all data\n  getData() {\n    try {\n      const data = localStorage.getItem(this.storageKey);\n      return data ? JSON.parse(data) : {};\n    } catch (error) {\n      console.error('Error reading from local storage:', error);\n      return {};\n    }\n  }\n\n  // Save data\n  saveData(data) {\n    try {\n      localStorage.setItem(this.storageKey, JSON.stringify(data));\n      return true;\n    } catch (error) {\n      console.error('Error saving to local storage:', error);\n      return false;\n    }\n  }\n\n  // Contact form submissions\n  async submitContactForm(formData) {\n    const data = this.getData();\n    const newContact = {\n      id: Date.now().toString(),\n      ...formData,\n      timestamp: new Date().toISOString(),\n      status: 'new'\n    };\n    data.contacts.push(newContact);\n    data.analytics.formSubmissions += 1;\n    this.saveData(data);\n    return newContact;\n  }\n\n  // User registration\n  async registerUser(userData) {\n    const data = this.getData();\n    const newUser = {\n      id: Date.now().toString(),\n      ...userData,\n      createdAt: new Date().toISOString(),\n      status: 'active'\n    };\n    data.users.push(newUser);\n    this.saveData(data);\n    return newUser;\n  }\n\n  // Subscription management\n  async createSubscription(subscriptionData) {\n    const data = this.getData();\n    const newSubscription = {\n      id: Date.now().toString(),\n      ...subscriptionData,\n      createdAt: new Date().toISOString(),\n      status: 'pending'\n    };\n    data.subscriptions.push(newSubscription);\n    this.saveData(data);\n    return newSubscription;\n  }\n\n  // Analytics tracking\n  async trackEvent(eventType, eventData = {}) {\n    const data = this.getData();\n    switch (eventType) {\n      case 'pageView':\n        data.analytics.pageViews += 1;\n        break;\n      case 'buttonClick':\n        data.analytics.buttonClicks += 1;\n        break;\n      case 'formSubmission':\n        data.analytics.formSubmissions += 1;\n        break;\n      default:\n        // Handle custom events\n        if (!data.analytics[eventType]) {\n          data.analytics[eventType] = 0;\n        }\n        data.analytics[eventType] += 1;\n    }\n    this.saveData(data);\n  }\n\n  // Get analytics\n  async getAnalytics() {\n    const data = this.getData();\n    return data.analytics || {};\n  }\n\n  // Get contacts\n  async getContacts() {\n    const data = this.getData();\n    return data.contacts || [];\n  }\n\n  // Get users\n  async getUsers() {\n    const data = this.getData();\n    return data.users || [];\n  }\n\n  // Get subscriptions\n  async getSubscriptions() {\n    const data = this.getData();\n    return data.subscriptions || [];\n  }\n\n  // Course progress tracking\n  async getUserProgress(userId) {\n    var _data$userProgress;\n    const data = this.getData();\n    return ((_data$userProgress = data.userProgress) === null || _data$userProgress === void 0 ? void 0 : _data$userProgress[userId]) || {};\n  }\n  async getLessonProgress(userId, courseId, moduleIndex, lessonIndex) {\n    var _data$lessonProgress, _data$lessonProgress$;\n    const data = this.getData();\n    const key = `${courseId}-${moduleIndex}-${lessonIndex}`;\n    return ((_data$lessonProgress = data.lessonProgress) === null || _data$lessonProgress === void 0 ? void 0 : (_data$lessonProgress$ = _data$lessonProgress[userId]) === null || _data$lessonProgress$ === void 0 ? void 0 : _data$lessonProgress$[key]) || {};\n  }\n  async markLessonComplete(userId, courseId, moduleIndex, lessonIndex) {\n    const data = this.getData();\n\n    // Initialize progress tracking if not exists\n    if (!data.userProgress) data.userProgress = {};\n    if (!data.lessonProgress) data.lessonProgress = {};\n    if (!data.userProgress[userId]) data.userProgress[userId] = {};\n    if (!data.lessonProgress[userId]) data.lessonProgress[userId] = {};\n\n    // Mark lesson as complete\n    const lessonKey = `${courseId}-${moduleIndex}-${lessonIndex}`;\n    data.lessonProgress[userId][lessonKey] = {\n      completed: true,\n      completedAt: new Date().toISOString()\n    };\n\n    // Update course progress\n    const courseProgress = this.calculateCourseProgress(data.lessonProgress[userId], courseId);\n    data.userProgress[userId][courseId] = courseProgress;\n    this.saveData(data);\n    return true;\n  }\n  calculateCourseProgress(lessonProgress, courseId) {\n    // This is a simplified calculation - you can make it more sophisticated\n    const courseLessons = Object.keys(lessonProgress).filter(key => key.startsWith(courseId));\n    const completedLessons = courseLessons.filter(key => lessonProgress[key].completed);\n    return Math.round(completedLessons.length / courseLessons.length * 100) || 0;\n  }\n\n  // Search functionality\n  async searchContacts(query) {\n    const contacts = await this.getContacts();\n    return contacts.filter(contact => {\n      var _contact$name, _contact$email, _contact$message;\n      return ((_contact$name = contact.name) === null || _contact$name === void 0 ? void 0 : _contact$name.toLowerCase().includes(query.toLowerCase())) || ((_contact$email = contact.email) === null || _contact$email === void 0 ? void 0 : _contact$email.toLowerCase().includes(query.toLowerCase())) || ((_contact$message = contact.message) === null || _contact$message === void 0 ? void 0 : _contact$message.toLowerCase().includes(query.toLowerCase()));\n    });\n  }\n\n  // Export data (useful for migration to Firebase)\n  exportData() {\n    return this.getData();\n  }\n\n  // Import data (useful for migration from Firebase)\n  importData(data) {\n    return this.saveData(data);\n  }\n\n  // Clear all data (for testing)\n  clearData() {\n    localStorage.removeItem(this.storageKey);\n    this.initializeLocalStorage();\n  }\n}\n\n// Firebase configuration (for future use)\nconst firebaseConfig = {\n  // Your Firebase config will go here\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_APP_ID\n};\n\n// Firebase service class (for future implementation)\nclass FirebaseService {\n  constructor() {\n    this.initialized = false;\n    this.db = null;\n  }\n  async initialize() {\n    if (this.initialized) return;\n    try {\n      // Firebase initialization will go here\n      // const { initializeApp } = await import('firebase/app');\n      // const { getFirestore } = await import('firebase/firestore');\n\n      // const app = initializeApp(firebaseConfig);\n      // this.db = getFirestore(app);\n      // this.initialized = true;\n\n      console.log('Firebase service ready for implementation');\n    } catch (error) {\n      console.error('Error initializing Firebase:', error);\n    }\n  }\n\n  // Firebase methods will be implemented here\n  async submitContactForm(formData) {\n    await this.initialize();\n    // Firebase implementation\n  }\n  async registerUser(userData) {\n    await this.initialize();\n    // Firebase implementation\n  }\n  async createSubscription(subscriptionData) {\n    await this.initialize();\n    // Firebase implementation\n  }\n}\n\n// Export both services\nexport const localDatabase = new DatabaseService();\nexport const firebaseService = new FirebaseService();\n\n// Default export for easy switching between local and Firebase\nexport default localDatabase;","map":{"version":3,"names":["DatabaseService","constructor","storageKey","initializeLocalStorage","localStorage","getItem","defaultData","users","contacts","subscriptions","analytics","pageViews","formSubmissions","buttonClicks","setItem","JSON","stringify","getData","data","parse","error","console","saveData","submitContactForm","formData","newContact","id","Date","now","toString","timestamp","toISOString","status","push","registerUser","userData","newUser","createdAt","createSubscription","subscriptionData","newSubscription","trackEvent","eventType","eventData","getAnalytics","getContacts","getUsers","getSubscriptions","getUserProgress","userId","_data$userProgress","userProgress","getLessonProgress","courseId","moduleIndex","lessonIndex","_data$lessonProgress","_data$lessonProgress$","key","lessonProgress","markLessonComplete","lessonKey","completed","completedAt","courseProgress","calculateCourseProgress","courseLessons","Object","keys","filter","startsWith","completedLessons","Math","round","length","searchContacts","query","contact","_contact$name","_contact$email","_contact$message","name","toLowerCase","includes","email","message","exportData","importData","clearData","removeItem","firebaseConfig","apiKey","process","env","REACT_APP_FIREBASE_API_KEY","authDomain","REACT_APP_FIREBASE_AUTH_DOMAIN","projectId","REACT_APP_FIREBASE_PROJECT_ID","storageBucket","REACT_APP_FIREBASE_STORAGE_BUCKET","messagingSenderId","REACT_APP_FIREBASE_MESSAGING_SENDER_ID","appId","REACT_APP_FIREBASE_APP_ID","FirebaseService","initialized","db","initialize","log","localDatabase","firebaseService"],"sources":["/Users/prakash/Documents/vibe-coding/src/services/database.js"],"sourcesContent":["// Local Database Service - Can be easily connected to Firebase\nclass DatabaseService {\n  constructor() {\n    this.storageKey = 'vibe_coding_lifestyle_db';\n    this.initializeLocalStorage();\n  }\n\n  // Initialize local storage with default data\n  initializeLocalStorage() {\n    if (!localStorage.getItem(this.storageKey)) {\n      const defaultData = {\n        users: [],\n        contacts: [],\n        subscriptions: [],\n        analytics: {\n          pageViews: 0,\n          formSubmissions: 0,\n          buttonClicks: 0\n        }\n      };\n      localStorage.setItem(this.storageKey, JSON.stringify(defaultData));\n    }\n  }\n\n  // Get all data\n  getData() {\n    try {\n      const data = localStorage.getItem(this.storageKey);\n      return data ? JSON.parse(data) : {};\n    } catch (error) {\n      console.error('Error reading from local storage:', error);\n      return {};\n    }\n  }\n\n  // Save data\n  saveData(data) {\n    try {\n      localStorage.setItem(this.storageKey, JSON.stringify(data));\n      return true;\n    } catch (error) {\n      console.error('Error saving to local storage:', error);\n      return false;\n    }\n  }\n\n  // Contact form submissions\n  async submitContactForm(formData) {\n    const data = this.getData();\n    const newContact = {\n      id: Date.now().toString(),\n      ...formData,\n      timestamp: new Date().toISOString(),\n      status: 'new'\n    };\n    \n    data.contacts.push(newContact);\n    data.analytics.formSubmissions += 1;\n    \n    this.saveData(data);\n    return newContact;\n  }\n\n  // User registration\n  async registerUser(userData) {\n    const data = this.getData();\n    const newUser = {\n      id: Date.now().toString(),\n      ...userData,\n      createdAt: new Date().toISOString(),\n      status: 'active'\n    };\n    \n    data.users.push(newUser);\n    this.saveData(data);\n    return newUser;\n  }\n\n  // Subscription management\n  async createSubscription(subscriptionData) {\n    const data = this.getData();\n    const newSubscription = {\n      id: Date.now().toString(),\n      ...subscriptionData,\n      createdAt: new Date().toISOString(),\n      status: 'pending'\n    };\n    \n    data.subscriptions.push(newSubscription);\n    this.saveData(data);\n    return newSubscription;\n  }\n\n  // Analytics tracking\n  async trackEvent(eventType, eventData = {}) {\n    const data = this.getData();\n    \n    switch (eventType) {\n      case 'pageView':\n        data.analytics.pageViews += 1;\n        break;\n      case 'buttonClick':\n        data.analytics.buttonClicks += 1;\n        break;\n      case 'formSubmission':\n        data.analytics.formSubmissions += 1;\n        break;\n      default:\n        // Handle custom events\n        if (!data.analytics[eventType]) {\n          data.analytics[eventType] = 0;\n        }\n        data.analytics[eventType] += 1;\n    }\n    \n    this.saveData(data);\n  }\n\n  // Get analytics\n  async getAnalytics() {\n    const data = this.getData();\n    return data.analytics || {};\n  }\n\n  // Get contacts\n  async getContacts() {\n    const data = this.getData();\n    return data.contacts || [];\n  }\n\n  // Get users\n  async getUsers() {\n    const data = this.getData();\n    return data.users || [];\n  }\n\n  // Get subscriptions\n  async getSubscriptions() {\n    const data = this.getData();\n    return data.subscriptions || [];\n  }\n\n  // Course progress tracking\n  async getUserProgress(userId) {\n    const data = this.getData();\n    return data.userProgress?.[userId] || {};\n  }\n\n  async getLessonProgress(userId, courseId, moduleIndex, lessonIndex) {\n    const data = this.getData();\n    const key = `${courseId}-${moduleIndex}-${lessonIndex}`;\n    return data.lessonProgress?.[userId]?.[key] || {};\n  }\n\n  async markLessonComplete(userId, courseId, moduleIndex, lessonIndex) {\n    const data = this.getData();\n    \n    // Initialize progress tracking if not exists\n    if (!data.userProgress) data.userProgress = {};\n    if (!data.lessonProgress) data.lessonProgress = {};\n    if (!data.userProgress[userId]) data.userProgress[userId] = {};\n    if (!data.lessonProgress[userId]) data.lessonProgress[userId] = {};\n    \n    // Mark lesson as complete\n    const lessonKey = `${courseId}-${moduleIndex}-${lessonIndex}`;\n    data.lessonProgress[userId][lessonKey] = {\n      completed: true,\n      completedAt: new Date().toISOString()\n    };\n    \n    // Update course progress\n    const courseProgress = this.calculateCourseProgress(data.lessonProgress[userId], courseId);\n    data.userProgress[userId][courseId] = courseProgress;\n    \n    this.saveData(data);\n    return true;\n  }\n\n  calculateCourseProgress(lessonProgress, courseId) {\n    // This is a simplified calculation - you can make it more sophisticated\n    const courseLessons = Object.keys(lessonProgress).filter(key => key.startsWith(courseId));\n    const completedLessons = courseLessons.filter(key => lessonProgress[key].completed);\n    \n    return Math.round((completedLessons.length / courseLessons.length) * 100) || 0;\n  }\n\n  // Search functionality\n  async searchContacts(query) {\n    const contacts = await this.getContacts();\n    return contacts.filter(contact => \n      contact.name?.toLowerCase().includes(query.toLowerCase()) ||\n      contact.email?.toLowerCase().includes(query.toLowerCase()) ||\n      contact.message?.toLowerCase().includes(query.toLowerCase())\n    );\n  }\n\n  // Export data (useful for migration to Firebase)\n  exportData() {\n    return this.getData();\n  }\n\n  // Import data (useful for migration from Firebase)\n  importData(data) {\n    return this.saveData(data);\n  }\n\n  // Clear all data (for testing)\n  clearData() {\n    localStorage.removeItem(this.storageKey);\n    this.initializeLocalStorage();\n  }\n}\n\n// Firebase configuration (for future use)\nconst firebaseConfig = {\n  // Your Firebase config will go here\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_APP_ID\n};\n\n// Firebase service class (for future implementation)\nclass FirebaseService {\n  constructor() {\n    this.initialized = false;\n    this.db = null;\n  }\n\n  async initialize() {\n    if (this.initialized) return;\n\n    try {\n      // Firebase initialization will go here\n      // const { initializeApp } = await import('firebase/app');\n      // const { getFirestore } = await import('firebase/firestore');\n      \n      // const app = initializeApp(firebaseConfig);\n      // this.db = getFirestore(app);\n      // this.initialized = true;\n      \n      console.log('Firebase service ready for implementation');\n    } catch (error) {\n      console.error('Error initializing Firebase:', error);\n    }\n  }\n\n  // Firebase methods will be implemented here\n  async submitContactForm(formData) {\n    await this.initialize();\n    // Firebase implementation\n  }\n\n  async registerUser(userData) {\n    await this.initialize();\n    // Firebase implementation\n  }\n\n  async createSubscription(subscriptionData) {\n    await this.initialize();\n    // Firebase implementation\n  }\n}\n\n// Export both services\nexport const localDatabase = new DatabaseService();\nexport const firebaseService = new FirebaseService();\n\n// Default export for easy switching between local and Firebase\nexport default localDatabase; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}