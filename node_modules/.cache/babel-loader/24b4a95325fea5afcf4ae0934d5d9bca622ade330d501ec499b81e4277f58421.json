{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useCallback } from 'react';\nexport const useNotification = () => {\n  _s();\n  const [notification, setNotification] = useState(null);\n  const showNotification = useCallback((message, type = 'info') => {\n    setNotification({\n      message,\n      type\n    });\n\n    // Auto hide after 5 seconds\n    setTimeout(() => {\n      setNotification(null);\n    }, 5000);\n  }, []);\n  const hideNotification = useCallback(() => {\n    setNotification(null);\n  }, []);\n  return {\n    notification,\n    showNotification,\n    hideNotification\n  };\n};\n_s(useNotification, \"uyTp1yXYaD7e5tCxpHYYUvTDLS0=\");","map":{"version":3,"names":["useState","useCallback","useNotification","_s","notification","setNotification","showNotification","message","type","setTimeout","hideNotification"],"sources":["/Users/prakash/Documents/vibe-coding/src/hooks/useNotification.js"],"sourcesContent":["import { useState, useCallback } from 'react';\n\nexport const useNotification = () => {\n  const [notification, setNotification] = useState(null);\n\n  const showNotification = useCallback((message, type = 'info') => {\n    setNotification({ message, type });\n    \n    // Auto hide after 5 seconds\n    setTimeout(() => {\n      setNotification(null);\n    }, 5000);\n  }, []);\n\n  const hideNotification = useCallback(() => {\n    setNotification(null);\n  }, []);\n\n  return {\n    notification,\n    showNotification,\n    hideNotification\n  };\n}; "],"mappings":";AAAA,SAASA,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AAE7C,OAAO,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnC,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGL,QAAQ,CAAC,IAAI,CAAC;EAEtD,MAAMM,gBAAgB,GAAGL,WAAW,CAAC,CAACM,OAAO,EAAEC,IAAI,GAAG,MAAM,KAAK;IAC/DH,eAAe,CAAC;MAAEE,OAAO;MAAEC;IAAK,CAAC,CAAC;;IAElC;IACAC,UAAU,CAAC,MAAM;MACfJ,eAAe,CAAC,IAAI,CAAC;IACvB,CAAC,EAAE,IAAI,CAAC;EACV,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMK,gBAAgB,GAAGT,WAAW,CAAC,MAAM;IACzCI,eAAe,CAAC,IAAI,CAAC;EACvB,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO;IACLD,YAAY;IACZE,gBAAgB;IAChBI;EACF,CAAC;AACH,CAAC;AAACP,EAAA,CArBWD,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}