{"ast":null,"code":"import { collection, addDoc, serverTimestamp } from 'firebase/firestore';\nimport { db } from './firebase';\nconst EVENTS_COLLECTION = 'analytics_events';\nclass AnalyticsService {\n  async addEvent({\n    type,\n    label,\n    meta = {},\n    userId = null\n  }) {\n    try {\n      await addDoc(collection(db, EVENTS_COLLECTION), {\n        type,\n        label,\n        meta,\n        userId,\n        createdAt: serverTimestamp(),\n        source: 'web'\n      });\n    } catch (e) {\n      // Non-blocking\n      console.warn('analytics addEvent failed', e);\n    }\n  }\n  async trackEvent(eventName, eventData = {}) {\n    try {\n      await addDoc(collection(db, EVENTS_COLLECTION), {\n        eventName,\n        eventData,\n        timestamp: serverTimestamp(),\n        source: 'web',\n        url: window.location.href,\n        userAgent: navigator.userAgent\n      });\n    } catch (e) {\n      // Non-blocking\n      console.warn('analytics trackEvent failed', e);\n    }\n  }\n}\nexport const analyticsService = new AnalyticsService();\n\n// Legacy export for backward compatibility\nexport async function addEvent({\n  type,\n  label,\n  meta = {},\n  userId = null\n}) {\n  return analyticsService.addEvent({\n    type,\n    label,\n    meta,\n    userId\n  });\n}","map":{"version":3,"names":["collection","addDoc","serverTimestamp","db","EVENTS_COLLECTION","AnalyticsService","addEvent","type","label","meta","userId","createdAt","source","e","console","warn","trackEvent","eventName","eventData","timestamp","url","window","location","href","userAgent","navigator","analyticsService"],"sources":["/Users/prakash/Documents/vibe-coding/src/services/analytics.js"],"sourcesContent":["import { collection, addDoc, serverTimestamp } from 'firebase/firestore';\nimport { db } from './firebase';\n\nconst EVENTS_COLLECTION = 'analytics_events';\n\nclass AnalyticsService {\n  async addEvent({ type, label, meta = {}, userId = null }) {\n    try {\n      await addDoc(collection(db, EVENTS_COLLECTION), {\n        type,\n        label,\n        meta,\n        userId,\n        createdAt: serverTimestamp(),\n        source: 'web',\n      });\n    } catch (e) {\n      // Non-blocking\n      console.warn('analytics addEvent failed', e);\n    }\n  }\n\n  async trackEvent(eventName, eventData = {}) {\n    try {\n      await addDoc(collection(db, EVENTS_COLLECTION), {\n        eventName,\n        eventData,\n        timestamp: serverTimestamp(),\n        source: 'web',\n        url: window.location.href,\n        userAgent: navigator.userAgent\n      });\n    } catch (e) {\n      // Non-blocking\n      console.warn('analytics trackEvent failed', e);\n    }\n  }\n}\n\nexport const analyticsService = new AnalyticsService();\n\n// Legacy export for backward compatibility\nexport async function addEvent({ type, label, meta = {}, userId = null }) {\n  return analyticsService.addEvent({ type, label, meta, userId });\n}\n"],"mappings":"AAAA,SAASA,UAAU,EAAEC,MAAM,EAAEC,eAAe,QAAQ,oBAAoB;AACxE,SAASC,EAAE,QAAQ,YAAY;AAE/B,MAAMC,iBAAiB,GAAG,kBAAkB;AAE5C,MAAMC,gBAAgB,CAAC;EACrB,MAAMC,QAAQA,CAAC;IAAEC,IAAI;IAAEC,KAAK;IAAEC,IAAI,GAAG,CAAC,CAAC;IAAEC,MAAM,GAAG;EAAK,CAAC,EAAE;IACxD,IAAI;MACF,MAAMT,MAAM,CAACD,UAAU,CAACG,EAAE,EAAEC,iBAAiB,CAAC,EAAE;QAC9CG,IAAI;QACJC,KAAK;QACLC,IAAI;QACJC,MAAM;QACNC,SAAS,EAAET,eAAe,CAAC,CAAC;QAC5BU,MAAM,EAAE;MACV,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOC,CAAC,EAAE;MACV;MACAC,OAAO,CAACC,IAAI,CAAC,2BAA2B,EAAEF,CAAC,CAAC;IAC9C;EACF;EAEA,MAAMG,UAAUA,CAACC,SAAS,EAAEC,SAAS,GAAG,CAAC,CAAC,EAAE;IAC1C,IAAI;MACF,MAAMjB,MAAM,CAACD,UAAU,CAACG,EAAE,EAAEC,iBAAiB,CAAC,EAAE;QAC9Ca,SAAS;QACTC,SAAS;QACTC,SAAS,EAAEjB,eAAe,CAAC,CAAC;QAC5BU,MAAM,EAAE,KAAK;QACbQ,GAAG,EAAEC,MAAM,CAACC,QAAQ,CAACC,IAAI;QACzBC,SAAS,EAAEC,SAAS,CAACD;MACvB,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOX,CAAC,EAAE;MACV;MACAC,OAAO,CAACC,IAAI,CAAC,6BAA6B,EAAEF,CAAC,CAAC;IAChD;EACF;AACF;AAEA,OAAO,MAAMa,gBAAgB,GAAG,IAAIrB,gBAAgB,CAAC,CAAC;;AAEtD;AACA,OAAO,eAAeC,QAAQA,CAAC;EAAEC,IAAI;EAAEC,KAAK;EAAEC,IAAI,GAAG,CAAC,CAAC;EAAEC,MAAM,GAAG;AAAK,CAAC,EAAE;EACxE,OAAOgB,gBAAgB,CAACpB,QAAQ,CAAC;IAAEC,IAAI;IAAEC,KAAK;IAAEC,IAAI;IAAEC;EAAO,CAAC,CAAC;AACjE","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}