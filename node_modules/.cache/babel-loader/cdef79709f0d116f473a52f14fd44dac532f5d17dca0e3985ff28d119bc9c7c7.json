{"ast":null,"code":"const API_BASE_URL = process.env.REACT_APP_SERVER_URL || 'http://localhost:5000';\nclass ApiService {\n  constructor() {\n    this.baseURL = API_BASE_URL;\n  }\n  async request(endpoint, options = {}) {\n    const url = `${this.baseURL}${endpoint}`;\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        ...options.headers\n      },\n      ...options\n    };\n\n    // Add auth token if available\n    const token = localStorage.getItem('authToken');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    try {\n      const response = await fetch(url, config);\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.error || 'Request failed');\n      }\n      return data;\n    } catch (error) {\n      console.error('API request failed:', error);\n      throw error;\n    }\n  }\n\n  // Authentication\n  async register(userData) {\n    return this.request('/api/auth/register', {\n      method: 'POST',\n      body: JSON.stringify(userData)\n    });\n  }\n  async login(credentials) {\n    return this.request('/api/auth/login', {\n      method: 'POST',\n      body: JSON.stringify(credentials)\n    });\n  }\n  async getCurrentUser() {\n    return this.request('/api/auth/me');\n  }\n\n  // Contact form\n  async submitContactForm(contactData) {\n    return this.request('/api/contact', {\n      method: 'POST',\n      body: JSON.stringify(contactData)\n    });\n  }\n\n  // Analytics\n  async trackEvent(eventData) {\n    return this.request('/api/analytics', {\n      method: 'POST',\n      body: JSON.stringify(eventData)\n    });\n  }\n\n  // Subscriptions\n  async createSubscriptionOrder(plan) {\n    return this.request('/api/subscription/create', {\n      method: 'POST',\n      body: JSON.stringify({\n        plan\n      })\n    });\n  }\n  async verifySubscription(paymentData) {\n    return this.request('/api/subscription/verify', {\n      method: 'POST',\n      body: JSON.stringify(paymentData)\n    });\n  }\n\n  // Webinar\n  async createWebinarOrder(registrationData) {\n    return this.request('/api/webinar/register', {\n      method: 'POST',\n      body: JSON.stringify(registrationData)\n    });\n  }\n  async verifyWebinarPayment(paymentData) {\n    return this.request('/api/webinar/verify', {\n      method: 'POST',\n      body: JSON.stringify(paymentData)\n    });\n  }\n\n  // Razorpay key\n  async getRazorpayKey() {\n    return this.request('/api/razorpay-key');\n  }\n\n  // Course registration\n  async registerForCourse(courseId, courseTitle) {\n    return this.request('/api/courses/register', {\n      method: 'POST',\n      body: JSON.stringify({\n        courseId,\n        courseTitle\n      })\n    });\n  }\n  async getMyCourses() {\n    return this.request('/api/courses/my-courses');\n  }\n}\nexport const apiService = new ApiService();","map":{"version":3,"names":["API_BASE_URL","process","env","REACT_APP_SERVER_URL","ApiService","constructor","baseURL","request","endpoint","options","url","config","headers","token","localStorage","getItem","Authorization","response","fetch","data","json","ok","Error","error","console","register","userData","method","body","JSON","stringify","login","credentials","getCurrentUser","submitContactForm","contactData","trackEvent","eventData","createSubscriptionOrder","plan","verifySubscription","paymentData","createWebinarOrder","registrationData","verifyWebinarPayment","getRazorpayKey","registerForCourse","courseId","courseTitle","getMyCourses","apiService"],"sources":["/Users/prakash/Documents/vibe-coding/src/services/api.js"],"sourcesContent":["const API_BASE_URL = process.env.REACT_APP_SERVER_URL || 'http://localhost:5000';\n\nclass ApiService {\n  constructor() {\n    this.baseURL = API_BASE_URL;\n  }\n\n  async request(endpoint, options = {}) {\n    const url = `${this.baseURL}${endpoint}`;\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        ...options.headers,\n      },\n      ...options,\n    };\n\n    // Add auth token if available\n    const token = localStorage.getItem('authToken');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n\n    try {\n      const response = await fetch(url, config);\n      const data = await response.json();\n\n      if (!response.ok) {\n        throw new Error(data.error || 'Request failed');\n      }\n\n      return data;\n    } catch (error) {\n      console.error('API request failed:', error);\n      throw error;\n    }\n  }\n\n  // Authentication\n  async register(userData) {\n    return this.request('/api/auth/register', {\n      method: 'POST',\n      body: JSON.stringify(userData),\n    });\n  }\n\n  async login(credentials) {\n    return this.request('/api/auth/login', {\n      method: 'POST',\n      body: JSON.stringify(credentials),\n    });\n  }\n\n  async getCurrentUser() {\n    return this.request('/api/auth/me');\n  }\n\n  // Contact form\n  async submitContactForm(contactData) {\n    return this.request('/api/contact', {\n      method: 'POST',\n      body: JSON.stringify(contactData),\n    });\n  }\n\n  // Analytics\n  async trackEvent(eventData) {\n    return this.request('/api/analytics', {\n      method: 'POST',\n      body: JSON.stringify(eventData),\n    });\n  }\n\n  // Subscriptions\n  async createSubscriptionOrder(plan) {\n    return this.request('/api/subscription/create', {\n      method: 'POST',\n      body: JSON.stringify({ plan }),\n    });\n  }\n\n  async verifySubscription(paymentData) {\n    return this.request('/api/subscription/verify', {\n      method: 'POST',\n      body: JSON.stringify(paymentData),\n    });\n  }\n\n  // Webinar\n  async createWebinarOrder(registrationData) {\n    return this.request('/api/webinar/register', {\n      method: 'POST',\n      body: JSON.stringify(registrationData),\n    });\n  }\n\n  async verifyWebinarPayment(paymentData) {\n    return this.request('/api/webinar/verify', {\n      method: 'POST',\n      body: JSON.stringify(paymentData),\n    });\n  }\n\n  // Razorpay key\n  async getRazorpayKey() {\n    return this.request('/api/razorpay-key');\n  }\n\n  // Course registration\n  async registerForCourse(courseId, courseTitle) {\n    return this.request('/api/courses/register', {\n      method: 'POST',\n      body: JSON.stringify({ courseId, courseTitle }),\n    });\n  }\n\n  async getMyCourses() {\n    return this.request('/api/courses/my-courses');\n  }\n}\n\nexport const apiService = new ApiService();\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}