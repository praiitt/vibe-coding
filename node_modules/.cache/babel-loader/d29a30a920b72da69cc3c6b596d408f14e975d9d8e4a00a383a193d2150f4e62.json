{"ast":null,"code":"import { apiService } from './api';\nexport async function createWebinarRegistration({\n  name,\n  email,\n  phone,\n  experience,\n  goals\n}) {\n  try {\n    const response = await apiService.createWebinarOrder({\n      name,\n      email,\n      phone,\n      experience,\n      goals\n    });\n    return {\n      id: response.orderId\n    };\n  } catch (error) {\n    throw error;\n  }\n}\nexport async function updateRegistrationPayment(id, {\n  status,\n  razorpayPaymentId,\n  razorpayOrderId,\n  razorpaySignature\n}) {\n  try {\n    await apiService.verifyWebinarPayment({\n      orderId: razorpayOrderId,\n      paymentId: razorpayPaymentId,\n      signature: razorpaySignature\n    });\n    return {\n      success: true\n    };\n  } catch (error) {\n    throw error;\n  }\n}\nexport async function findRegistrationByEmail(email) {\n  // This would need to be implemented in the backend\n  // For now, return null as it's not critical for the current functionality\n  return null;\n}","map":{"version":3,"names":["apiService","createWebinarRegistration","name","email","phone","experience","goals","response","createWebinarOrder","id","orderId","error","updateRegistrationPayment","status","razorpayPaymentId","razorpayOrderId","razorpaySignature","verifyWebinarPayment","paymentId","signature","success","findRegistrationByEmail"],"sources":["/Users/prakash/Documents/vibe-coding/src/services/webinar.js"],"sourcesContent":["import { apiService } from './api';\n\nexport async function createWebinarRegistration({ name, email, phone, experience, goals }) {\n  try {\n    const response = await apiService.createWebinarOrder({\n      name, email, phone, experience, goals\n    });\n    return { id: response.orderId };\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function updateRegistrationPayment(id, { status, razorpayPaymentId, razorpayOrderId, razorpaySignature }) {\n  try {\n    await apiService.verifyWebinarPayment({\n      orderId: razorpayOrderId,\n      paymentId: razorpayPaymentId,\n      signature: razorpaySignature\n    });\n    return { success: true };\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function findRegistrationByEmail(email) {\n  // This would need to be implemented in the backend\n  // For now, return null as it's not critical for the current functionality\n  return null;\n}\n"],"mappings":"AAAA,SAASA,UAAU,QAAQ,OAAO;AAElC,OAAO,eAAeC,yBAAyBA,CAAC;EAAEC,IAAI;EAAEC,KAAK;EAAEC,KAAK;EAAEC,UAAU;EAAEC;AAAM,CAAC,EAAE;EACzF,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMP,UAAU,CAACQ,kBAAkB,CAAC;MACnDN,IAAI;MAAEC,KAAK;MAAEC,KAAK;MAAEC,UAAU;MAAEC;IAClC,CAAC,CAAC;IACF,OAAO;MAAEG,EAAE,EAAEF,QAAQ,CAACG;IAAQ,CAAC;EACjC,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,MAAMA,KAAK;EACb;AACF;AAEA,OAAO,eAAeC,yBAAyBA,CAACH,EAAE,EAAE;EAAEI,MAAM;EAAEC,iBAAiB;EAAEC,eAAe;EAAEC;AAAkB,CAAC,EAAE;EACrH,IAAI;IACF,MAAMhB,UAAU,CAACiB,oBAAoB,CAAC;MACpCP,OAAO,EAAEK,eAAe;MACxBG,SAAS,EAAEJ,iBAAiB;MAC5BK,SAAS,EAAEH;IACb,CAAC,CAAC;IACF,OAAO;MAAEI,OAAO,EAAE;IAAK,CAAC;EAC1B,CAAC,CAAC,OAAOT,KAAK,EAAE;IACd,MAAMA,KAAK;EACb;AACF;AAEA,OAAO,eAAeU,uBAAuBA,CAAClB,KAAK,EAAE;EACnD;EACA;EACA,OAAO,IAAI;AACb","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}