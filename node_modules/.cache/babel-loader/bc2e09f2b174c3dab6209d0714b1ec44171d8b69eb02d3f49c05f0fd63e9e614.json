{"ast":null,"code":"import { initializeApp } from 'firebase/app';\nimport { getFirestore } from 'firebase/firestore';\nimport { getAnalytics, isSupported } from 'firebase/analytics';\n\n// Provided Firebase config\nconst firebaseConfig = {\n  apiKey: 'AIzaSyDe671PgpCIqewl4iLXcWEUs1oWL3jlzp0',\n  authDomain: 'rraasi.firebaseapp.com',\n  projectId: 'rraasi',\n  storageBucket: 'rraasi.firebasestorage.app',\n  messagingSenderId: '764676936249',\n  appId: '1:764676936249:web:e17257693e292a2d0873e8',\n  measurementId: 'G-2M5RSRFL4S'\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\nconst db = getFirestore(app);\n\n// Initialize Analytics only when supported (browser env)\nlet analytics = null;\ntry {\n  // isSupported guards environments where analytics isn't available\n  isSupported().then(supported => {\n    if (supported) {\n      analytics = getAnalytics(app);\n    }\n  });\n} catch (_) {\n  // noop – analytics is optional\n}\nexport { app as default, db, analytics };","map":{"version":3,"names":["initializeApp","getFirestore","getAnalytics","isSupported","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","app","db","analytics","then","supported","_","default"],"sources":["/Users/prakash/Documents/vibe-coding/src/services/firebase.js"],"sourcesContent":["import { initializeApp } from 'firebase/app';\nimport { getFirestore } from 'firebase/firestore';\nimport { getAnalytics, isSupported } from 'firebase/analytics';\n\n// Provided Firebase config\nconst firebaseConfig = {\n  apiKey: 'AIzaSyDe671PgpCIqewl4iLXcWEUs1oWL3jlzp0',\n  authDomain: 'rraasi.firebaseapp.com',\n  projectId: 'rraasi',\n  storageBucket: 'rraasi.firebasestorage.app',\n  messagingSenderId: '764676936249',\n  appId: '1:764676936249:web:e17257693e292a2d0873e8',\n  measurementId: 'G-2M5RSRFL4S',\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\nconst db = getFirestore(app);\n\n// Initialize Analytics only when supported (browser env)\nlet analytics = null;\ntry {\n  // isSupported guards environments where analytics isn't available\n  isSupported().then((supported) => {\n    if (supported) {\n      analytics = getAnalytics(app);\n    }\n  });\n} catch (_) {\n  // noop – analytics is optional\n}\n\nexport { app as default, db, analytics };\n"],"mappings":"AAAA,SAASA,aAAa,QAAQ,cAAc;AAC5C,SAASC,YAAY,QAAQ,oBAAoB;AACjD,SAASC,YAAY,EAAEC,WAAW,QAAQ,oBAAoB;;AAE9D;AACA,MAAMC,cAAc,GAAG;EACrBC,MAAM,EAAE,yCAAyC;EACjDC,UAAU,EAAE,wBAAwB;EACpCC,SAAS,EAAE,QAAQ;EACnBC,aAAa,EAAE,4BAA4B;EAC3CC,iBAAiB,EAAE,cAAc;EACjCC,KAAK,EAAE,2CAA2C;EAClDC,aAAa,EAAE;AACjB,CAAC;;AAED;AACA,MAAMC,GAAG,GAAGZ,aAAa,CAACI,cAAc,CAAC;AACzC,MAAMS,EAAE,GAAGZ,YAAY,CAACW,GAAG,CAAC;;AAE5B;AACA,IAAIE,SAAS,GAAG,IAAI;AACpB,IAAI;EACF;EACAX,WAAW,CAAC,CAAC,CAACY,IAAI,CAAEC,SAAS,IAAK;IAChC,IAAIA,SAAS,EAAE;MACbF,SAAS,GAAGZ,YAAY,CAACU,GAAG,CAAC;IAC/B;EACF,CAAC,CAAC;AACJ,CAAC,CAAC,OAAOK,CAAC,EAAE;EACV;AAAA;AAGF,SAASL,GAAG,IAAIM,OAAO,EAAEL,EAAE,EAAEC,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}