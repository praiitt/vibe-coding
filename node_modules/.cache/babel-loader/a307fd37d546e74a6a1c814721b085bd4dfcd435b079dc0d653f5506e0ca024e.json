{"ast":null,"code":"class WebinarApiService {\n  constructor() {\n    this.baseUrl = process.env.REACT_APP_FUNCTIONS_URL || 'http://localhost:5001/your-project/us-central1';\n  }\n  async createRazorpayOrder(orderData) {\n    const resp = await fetch(`${this.baseUrl}/createOrder`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(orderData)\n    });\n    if (!resp.ok) throw new Error('Failed to create order');\n    return resp.json();\n  }\n  async verifyRazorpayPayment(paymentData) {\n    const resp = await fetch(`${this.baseUrl}/verifyPayment`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(paymentData)\n    });\n    if (!resp.ok) throw new Error('Verification failed');\n    return resp.json();\n  }\n\n  // Legacy methods for backward compatibility\n  async createOrder({\n    baseUrl,\n    registrationId,\n    amount\n  }) {\n    const resp = await fetch(`${baseUrl}/createOrder`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        registrationId,\n        amount\n      })\n    });\n    if (!resp.ok) throw new Error('Failed to create order');\n    return resp.json();\n  }\n  async verifyPayment({\n    baseUrl,\n    registrationId,\n    razorpay_order_id,\n    razorpay_payment_id,\n    razorpay_signature\n  }) {\n    const resp = await fetch(`${baseUrl}/verifyPayment`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        registrationId,\n        razorpay_order_id,\n        razorpay_payment_id,\n        razorpay_signature\n      })\n    });\n    if (!resp.ok) throw new Error('Verification failed');\n    return resp.json();\n  }\n}\nexport const webinarApi = new WebinarApiService();","map":{"version":3,"names":["WebinarApiService","constructor","baseUrl","process","env","REACT_APP_FUNCTIONS_URL","createRazorpayOrder","orderData","resp","fetch","method","headers","body","JSON","stringify","ok","Error","json","verifyRazorpayPayment","paymentData","createOrder","registrationId","amount","verifyPayment","razorpay_order_id","razorpay_payment_id","razorpay_signature","webinarApi"],"sources":["/Users/prakash/Documents/vibe-coding/src/services/webinarApi.js"],"sourcesContent":["class WebinarApiService {\n  constructor() {\n    this.baseUrl = process.env.REACT_APP_FUNCTIONS_URL || 'http://localhost:5001/your-project/us-central1';\n  }\n\n  async createRazorpayOrder(orderData) {\n    const resp = await fetch(`${this.baseUrl}/createOrder`, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(orderData),\n    });\n    if (!resp.ok) throw new Error('Failed to create order');\n    return resp.json();\n  }\n\n  async verifyRazorpayPayment(paymentData) {\n    const resp = await fetch(`${this.baseUrl}/verifyPayment`, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(paymentData),\n    });\n    if (!resp.ok) throw new Error('Verification failed');\n    return resp.json();\n  }\n\n  // Legacy methods for backward compatibility\n  async createOrder({ baseUrl, registrationId, amount }) {\n    const resp = await fetch(`${baseUrl}/createOrder`, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ registrationId, amount }),\n    });\n    if (!resp.ok) throw new Error('Failed to create order');\n    return resp.json();\n  }\n\n  async verifyPayment({ baseUrl, registrationId, razorpay_order_id, razorpay_payment_id, razorpay_signature }) {\n    const resp = await fetch(`${baseUrl}/verifyPayment`, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ registrationId, razorpay_order_id, razorpay_payment_id, razorpay_signature }),\n    });\n    if (!resp.ok) throw new Error('Verification failed');\n    return resp.json();\n  }\n}\n\nexport const webinarApi = new WebinarApiService();\n"],"mappings":"AAAA,MAAMA,iBAAiB,CAAC;EACtBC,WAAWA,CAAA,EAAG;IACZ,IAAI,CAACC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,uBAAuB,IAAI,gDAAgD;EACxG;EAEA,MAAMC,mBAAmBA,CAACC,SAAS,EAAE;IACnC,MAAMC,IAAI,GAAG,MAAMC,KAAK,CAAC,GAAG,IAAI,CAACP,OAAO,cAAc,EAAE;MACtDQ,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,SAAS;IAChC,CAAC,CAAC;IACF,IAAI,CAACC,IAAI,CAACO,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,wBAAwB,CAAC;IACvD,OAAOR,IAAI,CAACS,IAAI,CAAC,CAAC;EACpB;EAEA,MAAMC,qBAAqBA,CAACC,WAAW,EAAE;IACvC,MAAMX,IAAI,GAAG,MAAMC,KAAK,CAAC,GAAG,IAAI,CAACP,OAAO,gBAAgB,EAAE;MACxDQ,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACK,WAAW;IAClC,CAAC,CAAC;IACF,IAAI,CAACX,IAAI,CAACO,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,qBAAqB,CAAC;IACpD,OAAOR,IAAI,CAACS,IAAI,CAAC,CAAC;EACpB;;EAEA;EACA,MAAMG,WAAWA,CAAC;IAAElB,OAAO;IAAEmB,cAAc;IAAEC;EAAO,CAAC,EAAE;IACrD,MAAMd,IAAI,GAAG,MAAMC,KAAK,CAAC,GAAGP,OAAO,cAAc,EAAE;MACjDQ,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEO,cAAc;QAAEC;MAAO,CAAC;IACjD,CAAC,CAAC;IACF,IAAI,CAACd,IAAI,CAACO,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,wBAAwB,CAAC;IACvD,OAAOR,IAAI,CAACS,IAAI,CAAC,CAAC;EACpB;EAEA,MAAMM,aAAaA,CAAC;IAAErB,OAAO;IAAEmB,cAAc;IAAEG,iBAAiB;IAAEC,mBAAmB;IAAEC;EAAmB,CAAC,EAAE;IAC3G,MAAMlB,IAAI,GAAG,MAAMC,KAAK,CAAC,GAAGP,OAAO,gBAAgB,EAAE;MACnDQ,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEO,cAAc;QAAEG,iBAAiB;QAAEC,mBAAmB;QAAEC;MAAmB,CAAC;IACrG,CAAC,CAAC;IACF,IAAI,CAAClB,IAAI,CAACO,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,qBAAqB,CAAC;IACpD,OAAOR,IAAI,CAACS,IAAI,CAAC,CAAC;EACpB;AACF;AAEA,OAAO,MAAMU,UAAU,GAAG,IAAI3B,iBAAiB,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}