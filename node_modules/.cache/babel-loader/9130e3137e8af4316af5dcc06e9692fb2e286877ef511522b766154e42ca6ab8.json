{"ast":null,"code":"// Local Database Service - Can be easily connected to Firebase\nclass DatabaseService{constructor(){this.storageKey='vibe_coding_lifestyle_db';this.initializeLocalStorage();}// Initialize local storage with default data\ninitializeLocalStorage(){if(!localStorage.getItem(this.storageKey)){const defaultData={users:[],contacts:[],subscriptions:[],analytics:{pageViews:0,formSubmissions:0,buttonClicks:0}};localStorage.setItem(this.storageKey,JSON.stringify(defaultData));}}// Get all data\ngetData(){try{const data=localStorage.getItem(this.storageKey);return data?JSON.parse(data):{};}catch(error){console.error('Error reading from local storage:',error);return{};}}// Save data\nsaveData(data){try{localStorage.setItem(this.storageKey,JSON.stringify(data));return true;}catch(error){console.error('Error saving to local storage:',error);return false;}}// Contact form submissions\nasync submitContactForm(formData){const data=this.getData();const newContact={id:Date.now().toString(),...formData,timestamp:new Date().toISOString(),status:'new'};data.contacts.push(newContact);data.analytics.formSubmissions+=1;this.saveData(data);return newContact;}// User registration\nasync registerUser(userData){const data=this.getData();const newUser={id:Date.now().toString(),...userData,createdAt:new Date().toISOString(),status:'active'};data.users.push(newUser);this.saveData(data);return newUser;}// User authentication\nasync createUser(userData){return this.registerUser(userData);}async authenticateUser(email,password){const data=this.getData();const user=data.users.find(u=>u.email===email&&u.password===password);return user||null;}async getUserById(userId){const data=this.getData();return data.users.find(u=>u.id===userId)||null;}// Subscription management\nasync createSubscription(subscriptionData){const data=this.getData();const newSubscription={id:Date.now().toString(),...subscriptionData,createdAt:new Date().toISOString(),status:'active'};data.subscriptions.push(newSubscription);this.saveData(data);return newSubscription;}async getUserSubscriptions(userId){const data=this.getData();return data.subscriptions.filter(sub=>sub.userId===userId)||[];}async cancelSubscription(subscriptionId){const data=this.getData();const subscription=data.subscriptions.find(sub=>sub.id===subscriptionId);if(subscription){subscription.status='cancelled';subscription.cancelledAt=new Date().toISOString();this.saveData(data);}return subscription;}// Analytics tracking\nasync trackEvent(eventType){let eventData=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};const data=this.getData();switch(eventType){case'pageView':data.analytics.pageViews+=1;break;case'buttonClick':data.analytics.buttonClicks+=1;break;case'formSubmission':data.analytics.formSubmissions+=1;break;default:// Handle custom events\nif(!data.analytics[eventType]){data.analytics[eventType]=0;}data.analytics[eventType]+=1;}this.saveData(data);}// Get analytics\nasync getAnalytics(){const data=this.getData();return data.analytics||{};}// Get contacts\nasync getContacts(){const data=this.getData();return data.contacts||[];}// Get users\nasync getUsers(){const data=this.getData();return data.users||[];}// Get subscriptions\nasync getSubscriptions(){const data=this.getData();return data.subscriptions||[];}// Course progress tracking\nasync getUserProgress(userId){var _data$userProgress;const data=this.getData();return((_data$userProgress=data.userProgress)===null||_data$userProgress===void 0?void 0:_data$userProgress[userId])||{};}async getLessonProgress(userId,courseId,moduleIndex,lessonIndex){var _data$lessonProgress,_data$lessonProgress$;const data=this.getData();const key=`${courseId}-${moduleIndex}-${lessonIndex}`;return((_data$lessonProgress=data.lessonProgress)===null||_data$lessonProgress===void 0?void 0:(_data$lessonProgress$=_data$lessonProgress[userId])===null||_data$lessonProgress$===void 0?void 0:_data$lessonProgress$[key])||{};}async markLessonComplete(userId,courseId,moduleIndex,lessonIndex){const data=this.getData();// Initialize progress tracking if not exists\nif(!data.userProgress)data.userProgress={};if(!data.lessonProgress)data.lessonProgress={};if(!data.userProgress[userId])data.userProgress[userId]={};if(!data.lessonProgress[userId])data.lessonProgress[userId]={};// Mark lesson as complete\nconst lessonKey=`${courseId}-${moduleIndex}-${lessonIndex}`;data.lessonProgress[userId][lessonKey]={completed:true,completedAt:new Date().toISOString()};// Update course progress\nconst courseProgress=this.calculateCourseProgress(data.lessonProgress[userId],courseId);data.userProgress[userId][courseId]=courseProgress;this.saveData(data);return true;}calculateCourseProgress(lessonProgress,courseId){// This is a simplified calculation - you can make it more sophisticated\nconst courseLessons=Object.keys(lessonProgress).filter(key=>key.startsWith(courseId));const completedLessons=courseLessons.filter(key=>lessonProgress[key].completed);return Math.round(completedLessons.length/courseLessons.length*100)||0;}// Search functionality\nasync searchContacts(query){const contacts=await this.getContacts();return contacts.filter(contact=>{var _contact$name,_contact$email,_contact$message;return((_contact$name=contact.name)===null||_contact$name===void 0?void 0:_contact$name.toLowerCase().includes(query.toLowerCase()))||((_contact$email=contact.email)===null||_contact$email===void 0?void 0:_contact$email.toLowerCase().includes(query.toLowerCase()))||((_contact$message=contact.message)===null||_contact$message===void 0?void 0:_contact$message.toLowerCase().includes(query.toLowerCase()));});}// Export data (useful for migration to Firebase)\nexportData(){return this.getData();}// Import data (useful for migration from Firebase)\nimportData(data){return this.saveData(data);}// Clear all data (for testing)\nclearData(){localStorage.removeItem(this.storageKey);this.initializeLocalStorage();}}// Firebase configuration (for future use)\nconst firebaseConfig={// Your Firebase config will go here\napiKey:process.env.REACT_APP_FIREBASE_API_KEY,authDomain:process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,projectId:process.env.REACT_APP_FIREBASE_PROJECT_ID,storageBucket:process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,messagingSenderId:process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,appId:process.env.REACT_APP_FIREBASE_APP_ID};// Firebase service class (for future implementation)\nclass FirebaseService{constructor(){this.initialized=false;this.db=null;}async initialize(){if(this.initialized)return;try{// Firebase initialization will go here\n// const { initializeApp } = await import('firebase/app');\n// const { getFirestore } = await import('firebase/firestore');\n// const app = initializeApp(firebaseConfig);\n// this.db = getFirestore(app);\n// this.initialized = true;\nconsole.log('Firebase service ready for implementation');}catch(error){console.error('Error initializing Firebase:',error);}}// Firebase methods will be implemented here\nasync submitContactForm(formData){await this.initialize();// Firebase implementation\n}async registerUser(userData){await this.initialize();// Firebase implementation\n}async createSubscription(subscriptionData){await this.initialize();// Firebase implementation\n}}// Export both services\nexport const localDatabase=new DatabaseService();export const firebaseService=new FirebaseService();// Default export for easy switching between local and Firebase\nexport default localDatabase;","map":{"version":3,"names":["DatabaseService","constructor","storageKey","initializeLocalStorage","localStorage","getItem","defaultData","users","contacts","subscriptions","analytics","pageViews","formSubmissions","buttonClicks","setItem","JSON","stringify","getData","data","parse","error","console","saveData","submitContactForm","formData","newContact","id","Date","now","toString","timestamp","toISOString","status","push","registerUser","userData","newUser","createdAt","createUser","authenticateUser","email","password","user","find","u","getUserById","userId","createSubscription","subscriptionData","newSubscription","getUserSubscriptions","filter","sub","cancelSubscription","subscriptionId","subscription","cancelledAt","trackEvent","eventType","eventData","arguments","length","undefined","getAnalytics","getContacts","getUsers","getSubscriptions","getUserProgress","_data$userProgress","userProgress","getLessonProgress","courseId","moduleIndex","lessonIndex","_data$lessonProgress","_data$lessonProgress$","key","lessonProgress","markLessonComplete","lessonKey","completed","completedAt","courseProgress","calculateCourseProgress","courseLessons","Object","keys","startsWith","completedLessons","Math","round","searchContacts","query","contact","_contact$name","_contact$email","_contact$message","name","toLowerCase","includes","message","exportData","importData","clearData","removeItem","firebaseConfig","apiKey","process","env","REACT_APP_FIREBASE_API_KEY","authDomain","REACT_APP_FIREBASE_AUTH_DOMAIN","projectId","REACT_APP_FIREBASE_PROJECT_ID","storageBucket","REACT_APP_FIREBASE_STORAGE_BUCKET","messagingSenderId","REACT_APP_FIREBASE_MESSAGING_SENDER_ID","appId","REACT_APP_FIREBASE_APP_ID","FirebaseService","initialized","db","initialize","log","localDatabase","firebaseService"],"sources":["/Users/prakash/Documents/vibe-coding/src/services/database.js"],"sourcesContent":["// Local Database Service - Can be easily connected to Firebase\nclass DatabaseService {\n  constructor() {\n    this.storageKey = 'vibe_coding_lifestyle_db';\n    this.initializeLocalStorage();\n  }\n\n  // Initialize local storage with default data\n  initializeLocalStorage() {\n    if (!localStorage.getItem(this.storageKey)) {\n      const defaultData = {\n        users: [],\n        contacts: [],\n        subscriptions: [],\n        analytics: {\n          pageViews: 0,\n          formSubmissions: 0,\n          buttonClicks: 0\n        }\n      };\n      localStorage.setItem(this.storageKey, JSON.stringify(defaultData));\n    }\n  }\n\n  // Get all data\n  getData() {\n    try {\n      const data = localStorage.getItem(this.storageKey);\n      return data ? JSON.parse(data) : {};\n    } catch (error) {\n      console.error('Error reading from local storage:', error);\n      return {};\n    }\n  }\n\n  // Save data\n  saveData(data) {\n    try {\n      localStorage.setItem(this.storageKey, JSON.stringify(data));\n      return true;\n    } catch (error) {\n      console.error('Error saving to local storage:', error);\n      return false;\n    }\n  }\n\n  // Contact form submissions\n  async submitContactForm(formData) {\n    const data = this.getData();\n    const newContact = {\n      id: Date.now().toString(),\n      ...formData,\n      timestamp: new Date().toISOString(),\n      status: 'new'\n    };\n    \n    data.contacts.push(newContact);\n    data.analytics.formSubmissions += 1;\n    \n    this.saveData(data);\n    return newContact;\n  }\n\n  // User registration\n  async registerUser(userData) {\n    const data = this.getData();\n    const newUser = {\n      id: Date.now().toString(),\n      ...userData,\n      createdAt: new Date().toISOString(),\n      status: 'active'\n    };\n    \n    data.users.push(newUser);\n    this.saveData(data);\n    return newUser;\n  }\n\n  // User authentication\n  async createUser(userData) {\n    return this.registerUser(userData);\n  }\n\n  async authenticateUser(email, password) {\n    const data = this.getData();\n    const user = data.users.find(u => u.email === email && u.password === password);\n    return user || null;\n  }\n\n  async getUserById(userId) {\n    const data = this.getData();\n    return data.users.find(u => u.id === userId) || null;\n  }\n\n  // Subscription management\n  async createSubscription(subscriptionData) {\n    const data = this.getData();\n    const newSubscription = {\n      id: Date.now().toString(),\n      ...subscriptionData,\n      createdAt: new Date().toISOString(),\n      status: 'active'\n    };\n    \n    data.subscriptions.push(newSubscription);\n    this.saveData(data);\n    return newSubscription;\n  }\n\n  async getUserSubscriptions(userId) {\n    const data = this.getData();\n    return data.subscriptions.filter(sub => sub.userId === userId) || [];\n  }\n\n  async cancelSubscription(subscriptionId) {\n    const data = this.getData();\n    const subscription = data.subscriptions.find(sub => sub.id === subscriptionId);\n    if (subscription) {\n      subscription.status = 'cancelled';\n      subscription.cancelledAt = new Date().toISOString();\n      this.saveData(data);\n    }\n    return subscription;\n  }\n\n  // Analytics tracking\n  async trackEvent(eventType, eventData = {}) {\n    const data = this.getData();\n    \n    switch (eventType) {\n      case 'pageView':\n        data.analytics.pageViews += 1;\n        break;\n      case 'buttonClick':\n        data.analytics.buttonClicks += 1;\n        break;\n      case 'formSubmission':\n        data.analytics.formSubmissions += 1;\n        break;\n      default:\n        // Handle custom events\n        if (!data.analytics[eventType]) {\n          data.analytics[eventType] = 0;\n        }\n        data.analytics[eventType] += 1;\n    }\n    \n    this.saveData(data);\n  }\n\n  // Get analytics\n  async getAnalytics() {\n    const data = this.getData();\n    return data.analytics || {};\n  }\n\n  // Get contacts\n  async getContacts() {\n    const data = this.getData();\n    return data.contacts || [];\n  }\n\n  // Get users\n  async getUsers() {\n    const data = this.getData();\n    return data.users || [];\n  }\n\n  // Get subscriptions\n  async getSubscriptions() {\n    const data = this.getData();\n    return data.subscriptions || [];\n  }\n\n  // Course progress tracking\n  async getUserProgress(userId) {\n    const data = this.getData();\n    return data.userProgress?.[userId] || {};\n  }\n\n  async getLessonProgress(userId, courseId, moduleIndex, lessonIndex) {\n    const data = this.getData();\n    const key = `${courseId}-${moduleIndex}-${lessonIndex}`;\n    return data.lessonProgress?.[userId]?.[key] || {};\n  }\n\n  async markLessonComplete(userId, courseId, moduleIndex, lessonIndex) {\n    const data = this.getData();\n    \n    // Initialize progress tracking if not exists\n    if (!data.userProgress) data.userProgress = {};\n    if (!data.lessonProgress) data.lessonProgress = {};\n    if (!data.userProgress[userId]) data.userProgress[userId] = {};\n    if (!data.lessonProgress[userId]) data.lessonProgress[userId] = {};\n    \n    // Mark lesson as complete\n    const lessonKey = `${courseId}-${moduleIndex}-${lessonIndex}`;\n    data.lessonProgress[userId][lessonKey] = {\n      completed: true,\n      completedAt: new Date().toISOString()\n    };\n    \n    // Update course progress\n    const courseProgress = this.calculateCourseProgress(data.lessonProgress[userId], courseId);\n    data.userProgress[userId][courseId] = courseProgress;\n    \n    this.saveData(data);\n    return true;\n  }\n\n  calculateCourseProgress(lessonProgress, courseId) {\n    // This is a simplified calculation - you can make it more sophisticated\n    const courseLessons = Object.keys(lessonProgress).filter(key => key.startsWith(courseId));\n    const completedLessons = courseLessons.filter(key => lessonProgress[key].completed);\n    \n    return Math.round((completedLessons.length / courseLessons.length) * 100) || 0;\n  }\n\n  // Search functionality\n  async searchContacts(query) {\n    const contacts = await this.getContacts();\n    return contacts.filter(contact => \n      contact.name?.toLowerCase().includes(query.toLowerCase()) ||\n      contact.email?.toLowerCase().includes(query.toLowerCase()) ||\n      contact.message?.toLowerCase().includes(query.toLowerCase())\n    );\n  }\n\n  // Export data (useful for migration to Firebase)\n  exportData() {\n    return this.getData();\n  }\n\n  // Import data (useful for migration from Firebase)\n  importData(data) {\n    return this.saveData(data);\n  }\n\n  // Clear all data (for testing)\n  clearData() {\n    localStorage.removeItem(this.storageKey);\n    this.initializeLocalStorage();\n  }\n}\n\n// Firebase configuration (for future use)\nconst firebaseConfig = {\n  // Your Firebase config will go here\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_APP_ID\n};\n\n// Firebase service class (for future implementation)\nclass FirebaseService {\n  constructor() {\n    this.initialized = false;\n    this.db = null;\n  }\n\n  async initialize() {\n    if (this.initialized) return;\n\n    try {\n      // Firebase initialization will go here\n      // const { initializeApp } = await import('firebase/app');\n      // const { getFirestore } = await import('firebase/firestore');\n      \n      // const app = initializeApp(firebaseConfig);\n      // this.db = getFirestore(app);\n      // this.initialized = true;\n      \n      console.log('Firebase service ready for implementation');\n    } catch (error) {\n      console.error('Error initializing Firebase:', error);\n    }\n  }\n\n  // Firebase methods will be implemented here\n  async submitContactForm(formData) {\n    await this.initialize();\n    // Firebase implementation\n  }\n\n  async registerUser(userData) {\n    await this.initialize();\n    // Firebase implementation\n  }\n\n  async createSubscription(subscriptionData) {\n    await this.initialize();\n    // Firebase implementation\n  }\n}\n\n// Export both services\nexport const localDatabase = new DatabaseService();\nexport const firebaseService = new FirebaseService();\n\n// Default export for easy switching between local and Firebase\nexport default localDatabase; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}