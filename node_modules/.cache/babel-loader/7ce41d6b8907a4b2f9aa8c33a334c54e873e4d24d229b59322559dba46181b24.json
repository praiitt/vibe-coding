{"ast":null,"code":"import { apiService } from './api';\nclass AnalyticsService {\n  async addEvent({\n    type,\n    label,\n    meta = {},\n    userId = null\n  }) {\n    try {\n      await apiService.trackEvent({\n        event: type,\n        category: 'user_action',\n        label,\n        value: meta.value,\n        userId,\n        sessionId: this.getSessionId()\n      });\n    } catch (e) {\n      // Non-blocking\n      console.warn('analytics addEvent failed', e);\n    }\n  }\n  async trackEvent(eventName, eventData = {}) {\n    try {\n      await apiService.trackEvent({\n        event: eventName,\n        category: eventData.category || 'general',\n        label: eventData.label,\n        value: eventData.value,\n        userId: localStorage.getItem('userId'),\n        sessionId: this.getSessionId()\n      });\n    } catch (e) {\n      // Non-blocking\n      console.warn('analytics trackEvent failed', e);\n    }\n  }\n  getSessionId() {\n    let sessionId = sessionStorage.getItem('sessionId');\n    if (!sessionId) {\n      sessionId = 'session_' + Date.now() + '_' + Math.random().toString(36).substr(2, 9);\n      sessionStorage.setItem('sessionId', sessionId);\n    }\n    return sessionId;\n  }\n}\nexport const analyticsService = new AnalyticsService();\n\n// Legacy export for backward compatibility\nexport async function addEvent({\n  type,\n  label,\n  meta = {},\n  userId = null\n}) {\n  return analyticsService.addEvent({\n    type,\n    label,\n    meta,\n    userId\n  });\n}","map":{"version":3,"names":["apiService","AnalyticsService","addEvent","type","label","meta","userId","trackEvent","event","category","value","sessionId","getSessionId","e","console","warn","eventName","eventData","localStorage","getItem","sessionStorage","Date","now","Math","random","toString","substr","setItem","analyticsService"],"sources":["/Users/prakash/Documents/vibe-coding/src/services/analytics.js"],"sourcesContent":["import { apiService } from './api';\n\nclass AnalyticsService {\n  async addEvent({ type, label, meta = {}, userId = null }) {\n    try {\n      await apiService.trackEvent({\n        event: type,\n        category: 'user_action',\n        label,\n        value: meta.value,\n        userId,\n        sessionId: this.getSessionId()\n      });\n    } catch (e) {\n      // Non-blocking\n      console.warn('analytics addEvent failed', e);\n    }\n  }\n\n  async trackEvent(eventName, eventData = {}) {\n    try {\n      await apiService.trackEvent({\n        event: eventName,\n        category: eventData.category || 'general',\n        label: eventData.label,\n        value: eventData.value,\n        userId: localStorage.getItem('userId'),\n        sessionId: this.getSessionId()\n      });\n    } catch (e) {\n      // Non-blocking\n      console.warn('analytics trackEvent failed', e);\n    }\n  }\n\n  getSessionId() {\n    let sessionId = sessionStorage.getItem('sessionId');\n    if (!sessionId) {\n      sessionId = 'session_' + Date.now() + '_' + Math.random().toString(36).substr(2, 9);\n      sessionStorage.setItem('sessionId', sessionId);\n    }\n    return sessionId;\n  }\n}\n\nexport const analyticsService = new AnalyticsService();\n\n// Legacy export for backward compatibility\nexport async function addEvent({ type, label, meta = {}, userId = null }) {\n  return analyticsService.addEvent({ type, label, meta, userId });\n}\n"],"mappings":"AAAA,SAASA,UAAU,QAAQ,OAAO;AAElC,MAAMC,gBAAgB,CAAC;EACrB,MAAMC,QAAQA,CAAC;IAAEC,IAAI;IAAEC,KAAK;IAAEC,IAAI,GAAG,CAAC,CAAC;IAAEC,MAAM,GAAG;EAAK,CAAC,EAAE;IACxD,IAAI;MACF,MAAMN,UAAU,CAACO,UAAU,CAAC;QAC1BC,KAAK,EAAEL,IAAI;QACXM,QAAQ,EAAE,aAAa;QACvBL,KAAK;QACLM,KAAK,EAAEL,IAAI,CAACK,KAAK;QACjBJ,MAAM;QACNK,SAAS,EAAE,IAAI,CAACC,YAAY,CAAC;MAC/B,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOC,CAAC,EAAE;MACV;MACAC,OAAO,CAACC,IAAI,CAAC,2BAA2B,EAAEF,CAAC,CAAC;IAC9C;EACF;EAEA,MAAMN,UAAUA,CAACS,SAAS,EAAEC,SAAS,GAAG,CAAC,CAAC,EAAE;IAC1C,IAAI;MACF,MAAMjB,UAAU,CAACO,UAAU,CAAC;QAC1BC,KAAK,EAAEQ,SAAS;QAChBP,QAAQ,EAAEQ,SAAS,CAACR,QAAQ,IAAI,SAAS;QACzCL,KAAK,EAAEa,SAAS,CAACb,KAAK;QACtBM,KAAK,EAAEO,SAAS,CAACP,KAAK;QACtBJ,MAAM,EAAEY,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;QACtCR,SAAS,EAAE,IAAI,CAACC,YAAY,CAAC;MAC/B,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOC,CAAC,EAAE;MACV;MACAC,OAAO,CAACC,IAAI,CAAC,6BAA6B,EAAEF,CAAC,CAAC;IAChD;EACF;EAEAD,YAAYA,CAAA,EAAG;IACb,IAAID,SAAS,GAAGS,cAAc,CAACD,OAAO,CAAC,WAAW,CAAC;IACnD,IAAI,CAACR,SAAS,EAAE;MACdA,SAAS,GAAG,UAAU,GAAGU,IAAI,CAACC,GAAG,CAAC,CAAC,GAAG,GAAG,GAAGC,IAAI,CAACC,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC,CAACC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC;MACnFN,cAAc,CAACO,OAAO,CAAC,WAAW,EAAEhB,SAAS,CAAC;IAChD;IACA,OAAOA,SAAS;EAClB;AACF;AAEA,OAAO,MAAMiB,gBAAgB,GAAG,IAAI3B,gBAAgB,CAAC,CAAC;;AAEtD;AACA,OAAO,eAAeC,QAAQA,CAAC;EAAEC,IAAI;EAAEC,KAAK;EAAEC,IAAI,GAAG,CAAC,CAAC;EAAEC,MAAM,GAAG;AAAK,CAAC,EAAE;EACxE,OAAOsB,gBAAgB,CAAC1B,QAAQ,CAAC;IAAEC,IAAI;IAAEC,KAAK;IAAEC,IAAI;IAAEC;EAAO,CAAC,CAAC;AACjE","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}