{"ast":null,"code":"import { initializeApp } from 'firebase/app';\nimport { getFirestore } from 'firebase/firestore';\nimport { getAnalytics, isSupported } from 'firebase/analytics';\n\n// Static fallback config (current project)\nconst fallbackConfig = {\n  apiKey: 'AIzaSyDe671PgpCIqewl4iLXcWEUs1oWL3jlzp0',\n  authDomain: 'rraasi.firebaseapp.com',\n  projectId: 'rraasi',\n  storageBucket: 'rraasi.firebasestorage.app',\n  messagingSenderId: '764676936249',\n  appId: '1:764676936249:web:e17257693e292a2d0873e8',\n  measurementId: 'G-2M5RSRFL4S'\n};\n\n// Env-based override (set these to switch to your 'vibecoding' project)\nconst envConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\n  measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENT_ID\n};\nconst hasEnvConfig = Boolean(envConfig.apiKey && envConfig.projectId && envConfig.appId);\nconst firebaseConfig = hasEnvConfig ? envConfig : fallbackConfig;\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\nconst db = getFirestore(app);\n\n// Initialize Analytics only when supported (browser env)\nlet analytics = null;\ntry {\n  isSupported().then(supported => {\n    if (supported) {\n      analytics = getAnalytics(app);\n    }\n  });\n} catch (_) {\n  // analytics optional\n}\nexport { app as default, db, analytics };","map":{"version":3,"names":["initializeApp","getFirestore","getAnalytics","isSupported","fallbackConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","envConfig","process","env","REACT_APP_FIREBASE_API_KEY","REACT_APP_FIREBASE_AUTH_DOMAIN","REACT_APP_FIREBASE_PROJECT_ID","REACT_APP_FIREBASE_STORAGE_BUCKET","REACT_APP_FIREBASE_MESSAGING_SENDER_ID","REACT_APP_FIREBASE_APP_ID","REACT_APP_FIREBASE_MEASUREMENT_ID","hasEnvConfig","Boolean","firebaseConfig","app","db","analytics","then","supported","_","default"],"sources":["/Users/prakash/Documents/vibe-coding/src/services/firebase.js"],"sourcesContent":["import { initializeApp } from 'firebase/app';\nimport { getFirestore } from 'firebase/firestore';\nimport { getAnalytics, isSupported } from 'firebase/analytics';\n\n// Static fallback config (current project)\nconst fallbackConfig = {\n  apiKey: 'AIzaSyDe671PgpCIqewl4iLXcWEUs1oWL3jlzp0',\n  authDomain: 'rraasi.firebaseapp.com',\n  projectId: 'rraasi',\n  storageBucket: 'rraasi.firebasestorage.app',\n  messagingSenderId: '764676936249',\n  appId: '1:764676936249:web:e17257693e292a2d0873e8',\n  measurementId: 'G-2M5RSRFL4S',\n};\n\n// Env-based override (set these to switch to your 'vibecoding' project)\nconst envConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\n  measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENT_ID,\n};\n\nconst hasEnvConfig = Boolean(envConfig.apiKey && envConfig.projectId && envConfig.appId);\nconst firebaseConfig = hasEnvConfig ? envConfig : fallbackConfig;\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\nconst db = getFirestore(app);\n\n// Initialize Analytics only when supported (browser env)\nlet analytics = null;\ntry {\n  isSupported().then((supported) => {\n    if (supported) {\n      analytics = getAnalytics(app);\n    }\n  });\n} catch (_) {\n  // analytics optional\n}\n\nexport { app as default, db, analytics };\n"],"mappings":"AAAA,SAASA,aAAa,QAAQ,cAAc;AAC5C,SAASC,YAAY,QAAQ,oBAAoB;AACjD,SAASC,YAAY,EAAEC,WAAW,QAAQ,oBAAoB;;AAE9D;AACA,MAAMC,cAAc,GAAG;EACrBC,MAAM,EAAE,yCAAyC;EACjDC,UAAU,EAAE,wBAAwB;EACpCC,SAAS,EAAE,QAAQ;EACnBC,aAAa,EAAE,4BAA4B;EAC3CC,iBAAiB,EAAE,cAAc;EACjCC,KAAK,EAAE,2CAA2C;EAClDC,aAAa,EAAE;AACjB,CAAC;;AAED;AACA,MAAMC,SAAS,GAAG;EAChBP,MAAM,EAAEQ,OAAO,CAACC,GAAG,CAACC,0BAA0B;EAC9CT,UAAU,EAAEO,OAAO,CAACC,GAAG,CAACE,8BAA8B;EACtDT,SAAS,EAAEM,OAAO,CAACC,GAAG,CAACG,6BAA6B;EACpDT,aAAa,EAAEK,OAAO,CAACC,GAAG,CAACI,iCAAiC;EAC5DT,iBAAiB,EAAEI,OAAO,CAACC,GAAG,CAACK,sCAAsC;EACrET,KAAK,EAAEG,OAAO,CAACC,GAAG,CAACM,yBAAyB;EAC5CT,aAAa,EAAEE,OAAO,CAACC,GAAG,CAACO;AAC7B,CAAC;AAED,MAAMC,YAAY,GAAGC,OAAO,CAACX,SAAS,CAACP,MAAM,IAAIO,SAAS,CAACL,SAAS,IAAIK,SAAS,CAACF,KAAK,CAAC;AACxF,MAAMc,cAAc,GAAGF,YAAY,GAAGV,SAAS,GAAGR,cAAc;;AAEhE;AACA,MAAMqB,GAAG,GAAGzB,aAAa,CAACwB,cAAc,CAAC;AACzC,MAAME,EAAE,GAAGzB,YAAY,CAACwB,GAAG,CAAC;;AAE5B;AACA,IAAIE,SAAS,GAAG,IAAI;AACpB,IAAI;EACFxB,WAAW,CAAC,CAAC,CAACyB,IAAI,CAAEC,SAAS,IAAK;IAChC,IAAIA,SAAS,EAAE;MACbF,SAAS,GAAGzB,YAAY,CAACuB,GAAG,CAAC;IAC/B;EACF,CAAC,CAAC;AACJ,CAAC,CAAC,OAAOK,CAAC,EAAE;EACV;AAAA;AAGF,SAASL,GAAG,IAAIM,OAAO,EAAEL,EAAE,EAAEC,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}